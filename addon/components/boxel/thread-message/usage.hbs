<Freestyle::Usage @name="ThreadMessage">
  <:example>
    <Boxel::ThreadMessage
      @name={{this.name}}
      @imgURL={{this.imgURL}}
      @datetime={{this.datetime}}
      @notRound={{this.notRound}}
      @hideMeta={{this.hideMeta}}
      @hideName={{this.hideName}}
      @fullWidth={{this.fullWidth}}
      @containsCard={{this.containsCard}}
    >
      Hi Haley, Hereâ€™s your manuscript with all the edits I would recommend. Please review and let me know if you have any questions. I also added a couple tasks for you about things you should think about, as you figure out the rest of your story.
    </Boxel::ThreadMessage>
  </:example>
  <:api as |Args|>
    <Args.Yield
      @description="Message content"
      @required={{true}}
    />
    <Args.String
      @name="name"
      @description="The name displayed above the message"
      @value={{this.name}}
      @onInput={{fn (mut this.name)}}
      @required={{true}}
    />
    <Args.String
      @name="imgURL"
      @description="URL for the user avatar"
      @value={{this.imgURL}}
      @onInput={{fn (mut this.imgURL)}}
    />
    <Args.String
      @name="datetime"
      @description="Message timestamp"
      @defaultValue="(now)"
      @value={{this.datetime}}
      @onInput={{fn (mut this.datetime)}}
    />
    <Args.Bool
      @name="notRound"
      @value={{this.notRound}}
      @description="Avatar is not circle-shaped. This will only work if an `imgURL` arg is provided"
      @defaultValue={{false}}
      @onInput={{fn (mut this.notRound)}}
    />
    <Args.Bool
      @name="hideMeta"
      @value={{this.hideMeta}}
      @description="Visually hides the user avatar, name, and message timestamp"
      @defaultValue={{false}}
      @onInput={{fn (mut this.hideMeta)}}
    />
    <Args.Bool
      @name="hideName"
      @value={{this.hideName}}
      @description="Visually hides the user name"
      @defaultValue={{false}}
      @onInput={{fn (mut this.hideName)}}
    />
    <Args.Bool
      @name="fullWidth"
      @value={{this.fullWidth}}
      @description="Whether to allocate the full width to the content. This only works if containsCard is also true"
      @defaultValue={{false}}
      @onInput={{fn (mut this.fullWidth)}}
    />
    <Args.Bool
      @name="containsCard"
      @value={{this.containsCard}}
      @description="Whether or not the ThreadMessage contains a card as its first child. This modifies some layout rules for the message meta."
      @defaultValue={{false}}
      @onInput={{fn (mut this.containsCard)}}
    />
  </:api>
</Freestyle::Usage>

<Freestyle::Usage
  @slug="ThreadMessage-array"
>
  <:example>
    <div role="list">
      {{#each this.messageArray as |message i|}}
        <Boxel::ThreadMessage
          role="listitem"
          @name="Cardbot"
          @imgURL={{this.cardbotIcon}}
          @hideMeta={{gt i 0}}
          @hideName={{true}}
        >
          {{message}}
        </Boxel::ThreadMessage>
      {{/each}}
    </div>
  </:example>
</Freestyle::Usage>

<Freestyle::Usage
  @description="Layout rules displayed"
>
  <:example>
    <div>
      <Boxel::ThreadMessage
        @name="Cardbot"
        @imgURL={{this.cardbotIcon}}
      >
        First thread message does not apply margins.
      </Boxel::ThreadMessage>
      <Boxel::ThreadMessage
        @name="Cardbot"
        @imgURL={{this.cardbotIcon}}
        @hideMeta={{true}}
      >
        A message with meta hidden has a margin-top of 1.25rem. 
      </Boxel::ThreadMessage>
      <Boxel::ThreadMessage
        @name="Cardbot"
        @imgURL={{this.cardbotIcon}}
      >
        A message without meta hidden has a margin-top of 2.5rem. 
      </Boxel::ThreadMessage>
      <Boxel::ThreadMessage
        @name="Cardbot"
        @imgURL={{this.cardbotIcon}}
        @hideMeta={{true}}
      >
        The following message which contains a card will have its meta centered relative to its avatar.
      </Boxel::ThreadMessage>
      <Boxel::ThreadMessage
        @name="Cardbot"
        @imgURL={{this.cardbotIcon}}
        @containsCard={{true}}
        @fullWidth={{this.layoutExampleFullWidth}}
      >
        <Boxel::CardContainer 
          class="thread-message-usage-card"
        >
          <Boxel::Button @kind="primary" {{on "click" this.toggleLayoutExampleFullWidth}}>Click to toggle @fullWidth</Boxel::Button>
        </Boxel::CardContainer>
      </Boxel::ThreadMessage>
    </div>
  </:example>
</Freestyle::Usage>