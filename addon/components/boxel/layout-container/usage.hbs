<Freestyle::Usage @name="LayoutContainer">
  <:description>
    <p>Preconfigured CardContainer for a layout card</p>
    <div>
      <h4>Not yet implemented:</h4>
      <ul>
        <li>- Use of <code>Boxel::DropdownButton</code> component for the context menu.</li>
        <li>- Embedded version of this card with different view mode and states.</li>
        <li>- Nicer looking tabbed focus styles.</li>
        <li>- Layout card template:
          <ul>
            <li>- A grid tool for the generic layout card template + specific version of the template for Card Space use.</li>
            <li>- Ability to drag the cards inside to change the layout.</li>
            <li>- For embedded layout card: Ability to reorder the card fields by dragging them.</li>
          </ul>
        </li>
      </ul>
    </div>
  </:description>
  <:example>
    <Boxel::LayoutContainer
      @displayTools={{this.displayTools}}
      @isSelected={{this.isSelected}}
      @selectAction={{@selectAction}}
      @editAction={{@editAction}}
      @expandAction={{@expandAction}}
    >
      {{!-- Sample block yield --}}
        <div>
          Layout Card here
        </div>
      {{!-- End of sample block yield --}}
    </Boxel::LayoutContainer>
  </:example>
  <:api as |Args|>
    <Args.Bool
      @name="displayTools"
      @defaultValue={{false}}
      @value={{this.displayTools}}
      @onInput={{fn (mut this.displayTools)}}
    />
    <Args.Bool
      @name="isSelected"
      @defaultValue={{false}}
      @value={{this.isSelected}}
      @onInput={{fn (mut this.isSelected)}}
    />
    <Args.Action
      @name="editAction"
      @description="action to take when edit button is clicked"
    />
    <Args.Action
      @name="expandAction"
      @description="action to take when expand button is clicked"
    />
    <Args.Action
      @name="selectAction"
      @description="action to take when container is selected"
    />
  </:api>
</Freestyle::Usage>